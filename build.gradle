buildscript {
    ext {
        kotlinVersion = '1.1.4-3'
        slf4jVersion = '1.7.24'

        zirconVersion = '2017.2.1'

        junitVersion = '4.12'
        mockitoVersion = '1.10.19'
        assertjVersion = '3.6.2'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    mavenLocal()
}

jar {
    baseName = 'microcline'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.codetome.microcline.MainKt'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")

    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:slf4j-simple:$slf4jVersion")

    compile("org.codetome.zircon:zircon:$zirconVersion")

    testCompile("junit:junit:$junitVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
    testCompile("org.assertj:assertj-core:$assertjVersion")
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

check.dependsOn jacocoTestReport

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}
